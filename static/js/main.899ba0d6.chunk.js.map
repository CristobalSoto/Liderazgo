{"version":3,"sources":["assets/questions.js","pages/Welcome.js","components/Choice.js","components/Case.js","gamelayouts/QuestionOverlay.js","App.js","serviceWorker.js","index.js","assets/bg-situation.png","assets/jugador_1.png"],"names":["questions","data","case","answers","Welcome","props","react_default","a","createElement","Button_default","style","width","variant","color","onClick","next","Choice","_this","this","_this$props","classes","pos","index","checked1","checked2","Fragment","Grid_default","container","spacing","item","sm","xs","className","p","Checkbox_default","checked","onChange","event","handleChange","value","root","indeterminate","Divider_default","divider","React","Component","withStyles","theme","green","&$checked","textAlign","fontFamily","fontSize","lineHeight","marginBottom","Case","disabled","length","src","Jugador","img","ThumbUp_default","iconUp","ThumbDown_default","iconDown","map","option","components_Choice","arr1","arr2","key","height","padding","margin","marginRight","QuestionOverlay","state","disabledButton","btnColor","mlt","llt","outcome","open","handleTooltipClose","setState","handleTooltipOpen","handleDisabled","handleIndex","answerIndex","answerQuestion","Object","defineProperty","+","-","toConsumableArray","push","resetCheckboxs","nextPage","checkValue","arrFalse","concat","includes","_this$state","components_Case","ClickAwayListener_default","onClickAway","Tooltip_default","PopperProps","disablePortal","onClose","disableFocusListener","disableHoverListener","disableTouchListener","title","button","unit","minWidth","styles","tarjeta","display","flexDirection","justifyContent","alignItems","backgroundImage","situationBG","backgroundSize","minHeight","overflow","marginTop","dictatorContent","App","context","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","step","arguments","undefined","emptyStep","post_data","console","log","currentMode","_this2","BrowserRouter","index_es","pages_Welcome","bind","gamelayouts_QuestionOverlay","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.899ba0d6.chunk.js","sourcesContent":["export const questions = {'data': \n[\n    {\n        \"case\": \"Recibes un correo de un cliente importante que te dice que está teniendo problemas con una persona de tu equipo. Te señala que esta persona no ha cumplido con los compromisos acordados. Escoge ¿cuál crees qué es la mejor y la peor forma de enfrentrar esta situación?\",\n        \"answers\": \n        [\n            \"Le cuento a Isabel una experiencia similar que me tocó vivir en mi anterior trabajo para darle consejos de cómo resolver la situación.\",\n            \"Le cuento la situación a Isabel y le transmito la importancia de mantener una buena relación con este cliente para alcanzar la misión de la empresa.\",\n            \"Le cuento la situación a Isabel y le pregunto cómo se le ocurre que podemos resolver esta situación con el cliente.\",\n            \"Me junto con Isabel para contarle la situación, escuchar su posición y le planteo que nos reunamos periódicamente para ir trabajando la relación con este cliente.\",\n            \"Le recuerdo a Isabel los compromisos adquiridos con el cliente y le hago ver la importancia de resolver esta situación para que logre cumplir sus metas\",\n            \"Llamó al cliente, le pido las disculpas del caso y le comunicó que otra persona del equipo lo atenderá de aquí en adelante.\",\n            \"Invito al cliente a almorzar para pedirle disculpas y mejorar la relación.\"\n        ]\n    },\n    {\n        \"case\": \"Estamos a mediados de año, y los resultados del área que diriges están un 40% bajo la meta ¿cuál crees qué es la mejor y la peor forma de enfrentrar esta situación?\",\n        \"answers\": \n        [\n            \"Citó a todo mi equipo a una reunión extraordinaria en donde les presentó la situación y los arengo para que entre todos logremos revertir el escenario.\",\n            \"Le muestro al equipo una presentación con las fotos de la celebración del año anterior cuando se alcanzó la meta y destaco las capacidades de cada uno para dar la vuelta la situación.\",\n            \"Citó al equipo a una reunión de brainstorming afuera de la oficina y les pido que cada uno llegue con 3 ideas para revertir la situación.\",\n            \"Planifico sesiones de trabajo individuales con los miembros de mi equipo para entender la situación particular de cada uno y trabajar en conjunto para sacar su máximo rendiemiento.\",\n            \"Le ofrezco al equipo un bono extra a fin de año si logramos alcanzar la meta.\",\n            \"Realizó una evaluación individual del desempeño de cada miembro del equipo buscando identificar qué variables están incidiendo negatativamente de manera de implementar mejoras. \",\n            \"Redoblo mis esfuerzos para mejorar la situación y dar una señal de que hay una posibilidad de alcanzar la meta.\"\n        ]\n    },\n    {\n        \"case\": \"Acabas de asumir como lider de tu área compuesta por 7 personas. El lider antetior fue desvinculado del cargo por mal desepeño. Mañana es tu primer día como ejfe del equipo. ¿Que harías en tu primer día?\",\n        \"answers\": \n        [\n            \"Organizo un desayuno para contarles a todo lo que ocurrió, les muestro las metas del año y los invito a que juntos logremos alcanzar los objetivos.\",\n            \"Organizo una reunión con todo el equipo y les explico la razón por la que creo que me asignaron a mi como nuevo lider. Les comento que en la oirganización todos tienen espacios para crecer y les señalo que una de mis principlaes motivaciínes es hacr que ellossigan creciendo como profecionales.\",\n            \"Cito al equipo a una reunión y les planteo el desafío de convertirnos en el área con mejor desempeño de la compañía. Organizo 4 sesiones de trabajo para que en conjunto diseñemos un plan estratégico para alcanzar las metas.\",\n            \"Organizo desayunos individuales con cada uno de los miembros de mi equipo. En los desayunos les manifiesto mi intención de apoyarlos a cada uno de ellos de forma personal y agendo reuniones periódicas para mantenerlos motivados y comprometidos con el objetivo.\",\n            \"Le ofrezco al equipo un bono extra a fin de año si logramos alcanzar la meta.\",\n            \"Realizó una evaluación individual del desempeño de cada miembro del equipo buscando identificar qué variables están incidiendo negatativamente de manera de implementar mejoras. \",\n            \"Redoblo mis esfuerzos para mejorar la situación y dar una señal de que hay una posibilidad de alcanzar la meta.\"\n        ]\n    },\n    {\n        \"case\": \"Un empleado inició fuerte pero ya no crece o mejora. Muchos empleados que dejan de crecer es porque ya no se sienten retados. “En un nuevo trabajo, la pasión y energía son altas, pero la competencia es baja”, dice Folkman. “Los empleados nuevos prácticamente no saben lo que hacen”. Es esta sensación de novedad la que los fuerza a aprender y crecer rápidamente, creando un sentido de satisfacción. Con el tiempo, la pasión se desvanece conforme la competencia crece, lo que lleva a la gente a perder la motivación. Para ayudar a un empleado a recuperar el momentum, crea un nuevo problema a resolver. “Si pones a las personas en una posición o tarea en la que no han estado antes, verás cómo el ciclo de trabajo empieza de nuevo”, afirma Folkman. Cuando sea posible, alinea los retos con las metas profesionales del empleado, como una oportunidad de aprender el desarrollo del negocio a alguien que recién inició labores. No importa en qué estén trabajando, puedes ayudarles a potenciar su motivación al mostrarles el impacto que tiene su trabajo. Si ven cómo su trabajo beneficia a otros y cómo mejorando su performance cambia el resultado, es más probable que trabajen duro, aun cuando la novedad se desvanezca. \",\n        \"answers\":\n        [\n            \"1\",\n            \"2\",\n            \"3\",\n            \"4\",\n            \"5\",\n            \"6\",\n            \"7\"\n        ]\n    },\n    {\n        \"case\": \"Uno de los integrantes de tu equipo se te incinua. Etapa 1: Ignora la adulación, actúa como si no te hubieras dado cuenta y continúa con el servicio. Etapa 2: Indica que sabes lo que está sucediendo y sugiere que se concentren en el negocio. Etapa 3: Señale tu propia profesionalidad y la del cliente y pídele amablemente que se centren en temas relacionados con servicios y productos. Etapa 4: Di que realmente sólo puedes ayudar con asuntos relacionados con el negocio. De lo contrario, el cliente tendrá que buscar en otro lado. Si la adulación se convierte en un comportamiento de acecho, interrumpe la conversación.\",\n        \"answers\": \n        [\n            \"1\",\n            \"2\",\n            \"3\",\n            \"4\",\n            \"5\",\n            \"6\",\n            \"7\"\n        ]\n    },\n    {\n        \"case\": 'Un empleado quiere un ascenso pero no está preparado. Y eres visto como el obstáculo para que esta persona sea promovida. \"Empieza la discusión con preguntas\", aconseja. Pregúntale: ¿Por qué sientes que ya estás listo para conseguir un ascenso? ¿Qué te ayudará a conseguir en el largo plazo? ¿Cuáles son tus prioridades profesionales en la actualidad? Tu meta debe ser entender de dónde viene la persona y dónde espera llegar para que puedas apoyarlo a construir el puente. Muchas veces, los empleados dan por hecho ciertas habilidades que no están enlistadas en la descripción del cargo, como la capacidad de tomar la iniciativa, actuar como mentor para otros o pensar estratégicamente en el futuro. Ayúdalos a crecer clarificándoles cuáles son esas habilidades y dándoles sugerencias específicas sobre cómo pueden demostrarlas. “Enfócate en lo que pueden hacer para mejorar”, recomienda Folkman. “Deja que sea una discusión”.',\n        \"answers\": \n        [\n            \"1\",\n            \"2\",\n            \"3\",\n            \"4\",\n            \"5\",\n            \"6\",\n            \"7\"\n        ]\n    },\n    {\n        \"case\": 'Un empleado es buen trabajador pero choca con el equipo. Los temas interpersonales son sensibles, por lo que debes escuchar la perspectiva del empleado. Para hacerlo, recuerda una situación en específico y pregúntale qué pretendía comunicar o conseguir. “Muy pocas veces hablo con gente que tenía intenciones negativas”, dice Folkman. “Normalmente, o no reconocen cómo su comportamiento afecta a los demás o no saben cómo actuar de otra manera”. Para ayudarles a ganar consciencia haz preguntas como: ¿Notaste cómo reaccionaron tus compañeros cuando dijiste eso? ¿Por qué crees que respondieron así? “Si puedes ayudarlos a ver las pistas y a entenderlas, entonces podrán ajustar su comportamiento”, afirma Folkman. Una vez que reconozcan los asuntos, ayúdalos a generar ideas sobre cómo podrían comportarse diferente. Motívalos a experimentar reemplazando un comportamiento negativo por uno positivo, como escribir en lugar de interrumpir. Discute los resultados con ellos después del cambio. Idealmente, empezarían a ver que son más exitosos cuando trabajan en sincronía con el grupo.',\n        \"answers\": \n        [\n            \"1\",\n            \"2\",\n            \"3\",\n            \"4\",\n            \"5\",\n            \"6\",\n            \"7\"\n        ]\n    },\n]\n}","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\nconst Welcome = (props) => {\n    return (\n        <div>\n            <h1>Dilema</h1>\n            <p><b>Tiempo aproximado del juego</b>: 3 Minutos</p><br />\n            <p>Este juego se trata de simular distintas situaciónes que te podrían suceder en el trabajo.\n                En total serán 7 situaciones, y para cada una de ellas, deberás elegir la opción que crees \n                que es la mejor y también la opción que crees que es la peor.</p> <br />\n            <Button style={{width:'50%'}} variant=\"contained\" color=\"secondary\" onClick={()=>props.next(2)} >Continuar</Button>\n        </div>\n  )\n};\n\nexport default Welcome;","import React from \"react\";\n\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider'\nimport Checkbox from '@material-ui/core/Checkbox';\nimport green from '@material-ui/core/colors/green';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    root: {\n        color: green[600],\n        '&$checked': {\n        color: green[500],\n        },\n    },\n    checked: {\n\n    },\n\n    p: {\n        textAlign: \"left\",\n        fontFamily: 'Arial',\n        fontSize: '0.9rem',\n        lineHeight: '1.5rem',\n        color: '#828282',\n        marginBottom: '10px',\n    },\n    divider: {\n        width: '100%',\n    }\n});\n\nclass Choice extends React.Component {\n\n  render () {\n  \n    const { classes, pos, data, index, checked1, checked2 } = this.props;\n    return (\n        <React.Fragment>\n            <Grid container spacing={0}>\n            <Grid item sm={8} xs={8} >\n                <p className={classes.p}>{data}</p>\n                \n            </Grid>\n            <Grid item sm={2} xs={2} >\n                <Checkbox checked={checked1} onChange={(event) => this.props.handleChange(pos, index, true)} value=\"mlt\" classes={{\n                root: classes.root,\n                checked: classes.checked,\n                }}  />\n            </Grid>\n            <Grid item sm={2} xs={2} >\n                <Checkbox checked={checked2} onChange={ (event) => this.props.handleChange(pos, index, false)} value=\"llt\" indeterminate/>\n            </Grid>\n            \n            </Grid>\n            <Divider className={classes.divider}/>\n         </React.Fragment>\n    )\n  }\n}\n\nexport default withStyles(styles)(Choice);\n\n","import React from \"react\";\n\nimport Choice from '../components/Choice'\nimport Jugador from \"../assets/jugador_1.png\";\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider'\nimport green from '@material-ui/core/colors/green';\n\n\nimport ThumbUp from '@material-ui/icons/ThumbUp';\nimport ThumbDown from '@material-ui/icons/ThumbDown';\n\n\nconst styles = theme => ({\n\n    divider: {\n        width: '100%',\n    },\n\n    img: {\n        width: '100%',\n        height: 'auto'\n    },\n\n    iconUp:{\n        padding: '0px',\n        margin: '0px',\n        marginRight: '-5px',\n        color: green[600],\n    },\n\n    iconDown: {\n        padding: '0px',\n        margin: '0px',\n        marginRight: '-6px',\n    }\n});\n\nclass Case extends React.Component {\n\n\n    render () {\n  \n        const { disabled, classes, data, index } = this.props;\n\n        return (\n            <Grid container spacing={0}>\n                <Grid item xs={12}>\n                    <p style={{textAlign:'right'}}>{index+1 + \" de \" + data.answers.length}</p>\n                </Grid>\n                <Grid item sm={3} xs={12}>\n                    <img src={Jugador} className={classes.img} />\n                </Grid>\n                <Grid item xs={9} >\n                    <h3>Caso {index + 1}</h3>\n                    <p style={{textAlign:'justify'}} > {data.case}</p>\n                </Grid>\n                <Grid item sm={8} xs={8}></Grid>\n                <Grid item sm={2} xs={2}><ThumbUp className={classes.iconUp} /></Grid>\n                <Grid item sm={2} xs={2}><ThumbDown className={classes.iconDown} color='secondary' /></Grid>\n                <Divider className={classes.divider}/>\n                {data.answers.map((option, pos) =>  <Choice checked1={this.props.arr1[pos]} checked2 = {this.props.arr2[pos] }  handleChange = {this.props.handleChange} data = {option} key = {pos} pos = {pos}  index={index}/>\n                )}\n            </Grid>\n            \n            \n        )\n    }\n}\n\nexport default withStyles(styles)(Case);","import React from \"react\";\n\nimport Case from '../components/Case'\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\n\n\nconst styles = theme => ({\n\n  button: {\n    margin: theme.spacing.unit,\n    minWidth: '50%',\n  }\n\n});\n\n\nclass QuestionOverlay extends React.Component {\n\n    // mlt = more likely to\n    // llt = less likely to\n    state = {\n        index: 0,\n        disabledButton: true,\n        btnColor: 'default',\n        arr1 : [false, false, false, false, false, false, false],\n        arr2 : [false, false, false, false, false, false, false],\n        mlt: 0,\n        llt: 0,\n        outcome: [],\n        open: false\n    }\n\n    handleTooltipClose = () => {\n        this.setState({ open: false });\n      };\n    \n      handleTooltipOpen = () => {\n        this.setState({ open: true });\n      };\n\n    handleDisabled = (disabled) => {\n        if (!disabled){\n            this.setState({ btnColor: 'secondary' })\n        } else {\n            this.setState({ btnColor: 'default' })\n        }\n        this.setState({ disabledButton: disabled })\n    }\n\n    handleIndex = () => {\n        if (this.state.disabledButton) {\n            this.setState({ open: true })\n            return\n        }\n        this.setState({ btnColor: 'default' })\n        this.setState({ disabledButton: true })\n        let index = this.state.index + 1\n        let answerIndex = index\n        if (index < this.props.data.length) {\n            \n            let answerQuestion = {[answerIndex]:{'+':this.state.mlt, '-':this.state.llt}}\n            let outcome = [...this.state.outcome]\n            outcome.push(answerQuestion)\n            this.setState({ outcome: outcome })\n            this.resetCheckboxs()\n            this.setState({ index: index})\n        } else {\n            let answerQuestion = {[answerIndex]:{'+':this.state.mlt, '-':this.state.llt}}\n            let outcome = [...this.state.outcome]\n            outcome.push(answerQuestion)\n            this.setState({ outcome: outcome })\n            this.props.next(this.props.nextPage, this.state.outcome)\n        }\n    }\n\n    handleChange = (pos, index, checkValue) => {\n            \n        let arr1 = [...this.state.arr1]\n        let arr2 = [...this.state.arr2]\n        let arrFalse = [false, false, false, false, false, false, false]\n        if (checkValue) {\n            arr1 = [...arrFalse]\n            if (arr2[pos]) {\n                this.setState( { arr2: arrFalse })\n                this.handleDisabled(true)\n            }\n            arr1[pos]=true\n            this.setState({ mlt : pos })\n            this.setState( { arr1: arr1 }, () => {\n                if(this.state.arr2.includes(true)){\n                    this.handleDisabled(false)\n                } \n            })\n        }\n        else {\n            arr2 = [...arrFalse]\n            if (arr1[pos]) {\n                this.setState( { arr1: arrFalse })\n                this.handleDisabled(true)\n            }\n            arr2[pos]=true\n            this.setState({ llt : pos })\n            this.setState( { arr2: arr2}, () => {\n                if(this.state.arr1.includes(true)){\n                    this.handleDisabled(false)\n                } \n            })\n        }\n    }\n\n    resetCheckboxs = () => {\n        let arr1 = [false, false, false, false, false, false, false]\n        let arr2 = [false, false, false, false, false, false, false]\n        this.setState( {arr1: arr1, arr2: arr2})\n    }\n\n    render () {\n  \n        const { classes, data } = this.props;\n\n        const {index, arr1, arr2, btnColor} = this.state\n        return (\n            <Grid container spacing={8}>\n                <Case handleChange={this.handleChange} handleDisabled={this.handleDisabled} index = {index} data = {data[index]} arr1 = {arr1} arr2={arr2}/>\n                <Grid item xs={12}>\n                    <ClickAwayListener onClickAway={this.handleTooltipClose}>\n                        <div>\n                            <Tooltip\n                            PopperProps={{\n                                disablePortal: true,\n                            }}\n                            onClose={this.handleTooltipClose}\n                            open={this.state.open}\n                            disableFocusListener\n                            disableHoverListener\n                            disableTouchListener\n                            title=\"Para avanzar, deberás elegir la opción que crees que es la mejor y también la opción que crees que es la peor.\"\n                            >\n                                <Button variant=\"contained\" color={btnColor} className={classes.button} onClick={this.handleIndex}>Continuar</Button>\n                            </Tooltip>\n                        </div>\n                    </ClickAwayListener>\n                </Grid>\n            \n            \n            </Grid>\n        )\n    }\n}\n\nexport default withStyles(styles)(QuestionOverlay);","import React, { Component } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n// Material-UI components and images\nimport { Card, CardContent } from \"@material-ui/core\";\n\nimport situationBG from './assets/bg-situation.png';\n\nimport { questions } from './assets/questions'\n\n\nimport Welcome from \"./pages/Welcome\";\nimport QuestionOverlay from \"./gamelayouts/QuestionOverlay\";\n\n// Styles\nconst styles = {\n  tarjeta: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundImage: 'url('+situationBG+')',\n    backgroundSize: '100%',\n    height: 'calc(100vh - 65px)',\n  },\n  container: {\n    textAlign: \"center\",\n    width: \"70%\",\n    minHeight: \"70%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    overflow: \"auto\",\n    marginTop: '1em',\n  },\n  dictatorContent: {\n    width: \"100%\",\n    height: \"100%\",\n  }\n};\nclass App extends Component {\n\n\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        step: 1,\n        outcome: [],\n        currentMode: \"playing\",\n      };\n    }\n\n    \n    next = (step, content={emptyStep: true}) => {\n        let outcome = content\n        this.setState(state => ({ outcome: outcome , step: step}));\n    };\n\n    post_data = () => {\n\n        console.log(\"datos\");\n        console.log(this.state.outcome)\n    };\n\n    render() {\n\n        return (\n            <Router>\n                <div>\n                    <div style={styles.tarjeta}>\n                    <Card style={styles.container}>\n                        <CardContent className=\"dictatorContent\" style={styles.dictatorContent}>\n                        {(() => {\n                            switch(this.state.step) {\n                            case 1:\n                                return <Welcome next = {this.next.bind(this)}/>;\n                            case 2:\n                                return <QuestionOverlay data={questions.data} next = {this.next.bind(this)} nextPage = {3}/>;\n                            case 3:\n                                this.setState(state => ({ currentMode: \"sending_data\", step: 4}));\n                            case 4:\n                                return <div><p>Enviando resultados al servidor </p><i className='fa fa-spinner fa-pulse fa-3x fa-fw'></i></div>;\n                            default:\n                                return null;\n                            }\n                        })()}\n                        </CardContent>\n                    </Card>\n                    </div>\n                </div>\n            </Router>\n        );\n        }\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App2 from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App2 />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bg-situation.c235e4a2.png\";","module.exports = __webpack_public_path__ + \"static/media/jugador_1.0dad117b.png\";"],"sourceRoot":""}